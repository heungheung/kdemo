pipeline {
  agent none

  stages{

    stage("build"){
      when{
        changeset "**/result/**"
      }
      environment { HOME="." }
      agent{
        docker{
          image 'node:8.16.0-alpine'
        }
      }
      steps{
        echo 'Compiling result app'
        dir('result'){
          sh 'npm install'
        }
      }
    }

    stage("test"){
      when{
        changeset "**/result/**"
      }
      environment { HOME="." }
      agent{
        docker{
          image 'node:8.16.0-alpine'
        }
      }
      steps{
        echo 'Running Unit Tests on result app'
        dir('result'){
          sh 'npm install'
          sh 'npm test'
        }
      }
    }

    stage('docker-package'){
      agent any
      when{
//        branch 'main'
        changeset "**/result/**"
      }
      steps{
        echo 'Packaging result app with docker'
        dir('result'){
          script {
            def props = readProperties file: '/var/lib/jenkins/secrets/ocir.properties'
            env.u = props.u
            env.p = props.p
          }
          sh 'docker build -f Dockerfile -t iad.ocir.io/apaccpt03/result:v${BUILD_ID} .'
          sh 'docker tag iad.ocir.io/apaccpt03/kdemo/result:v${BUILD_ID} iad.ocir.io/apaccpt03/kdemo/result:latest'
          sh "docker login -u $u -p \'$p\'  https://iad.ocir.io/"
          sh 'docker push iad.ocir.io/apaccpt03/kdemo/result:v${BUILD_ID}'
          sh 'docker push iad.ocir.io/apaccpt03/kdemo/result:latest'
          sh 'docker logout'
        }

      }
    }

  }

  post{
    always{

      echo 'Building multibranch pipeline for result app is completed..'
    }
    failure{
      slackSend (channel: "kdemo-devops", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
    success{
      slackSend (channel: "kdemo-devops", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
  }
}
