pipeline {

  agent none
//  agent {
//    docker{
//      image 'maven:3.6.1-jdk-8-slim'
//      args '-v $HOME/.m2:/root/.m2'
//    }
//  }

  stages{

    stage("build"){
      when{
        changeset "**/worker/**"
      }
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-slim'
          args '-v $HOME/.m2:/root/.m2'
        }
      }
      steps{
        echo 'Compiling worker app'
        dir('worker'){
          sh 'mvn compile'
        }
      }
    }

    stage("test"){
      when{
        changeset "**/worker/**"
      }
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-slim'
          args '-v $HOME/.m2:/root/.m2'
        }
      }
      steps{
        echo 'Running Unit Tests on worker app'
        dir('worker'){
          sh 'mvn clean test'
        }
      }
    }

    stage("package"){
      when{
        branch 'main'
        changeset "**/worker/**"
      }
      agent{
        docker{
          image 'maven:3.6.1-jdk-8-slim'
          args '-v $HOME/.m2:/root/.m2'
        }
      }
      steps{
        echo 'Packaging worker app'
        dir('worker'){
          sh 'mvn package'
          archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
        }
      }
    }

    stage('docker-package'){
      agent any
      when{
        branch 'main'
        changeset "**/worker/**"
      }
      steps{
        echo 'Packaging worker app with docker'
        script{
          docker.withRegistry('https://iad.ocir.io/','ocir-apaccpt03-kenneth') {
            def workerImage = docker.build("apaccpt03/kdemo/worker:v${env.BUILD_ID}", "./worker")
            workerImage.push()
            workerImage.push("latest")
          }
        }
      }
    }

  }

  post{
    always{

      echo 'Building multibranch pipeline for worker is completed..'
    }
    failure{
      slackSend (channel: "kdemo-devops", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
    success{
      slackSend (channel: "kdemo-devops", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
  }
}
